version: '3.8'

services:
  k-scan:
    build: .
    ports:
      - "8000:8000"
    environment:
      # Required: OpenAI API Configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o}
      - OPENAI_MODEL_TEMPERATURE=${OPENAI_MODEL_TEMPERATURE:-0.1}
      
      # Optional: Browserless Configuration
      - BROWSERLESS_TOKEN=${BROWSERLESS_TOKEN:-}
      - BROWSERLESS_URL=${BROWSERLESS_URL:-https://chrome.browserless.io}
      
      # Application Configuration
      - APP_NAME=${APP_NAME:-K-Scan Security Audit System}
      - VERSION=${VERSION:-1.0.0}
      - DEBUG=${DEBUG:-false}
      
      # Security Settings
      - MAX_SCAN_DEPTH=${MAX_SCAN_DEPTH:-3}
      - MAX_PAGES_PER_SCAN=${MAX_PAGES_PER_SCAN:-100}
      - SCAN_TIMEOUT=${SCAN_TIMEOUT:-300}
      - RATE_LIMIT_DELAY=${RATE_LIMIT_DELAY:-1.0}
      
      # Component Settings
      - ENABLE_SECRETS_SCAN=${ENABLE_SECRETS_SCAN:-true}
      - ENABLE_VULNERABILITY_SCAN=${ENABLE_VULNERABILITY_SCAN:-true}
      - ENABLE_HEADER_ANALYSIS=${ENABLE_HEADER_ANALYSIS:-true}
      - ENABLE_CRAWLING=${ENABLE_CRAWLING:-true}
      - ENABLE_REPORTING=${ENABLE_REPORTING:-true}
      
      # Database Configuration
      - DATABASE_URL=${DATABASE_URL:-data/k_scan.db}
      
      # API Configuration
      - API_HOST=${API_HOST:-0.0.0.0}
      - API_PORT=${API_PORT:-8000}
      - API_RELOAD=${API_RELOAD:-false}
    volumes:
      # Persist database and data files
      - k-scan-data:/app/data
      # Development: mount source code (comment out for production)
      - .:/app:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - k-scan-network

  # Optional: Redis for caching (uncomment if needed)
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis-data:/data
  #   restart: unless-stopped
  #   networks:
  #     - k-scan-network

  # Optional: PostgreSQL database (uncomment if moving from SQLite)
  # postgres:
  #   image: postgres:15-alpine
  #   environment:
  #     - POSTGRES_DB=k_scan
  #     - POSTGRES_USER=k_scan_user
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secure_password_change_me}
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   restart: unless-stopped
  #   networks:
  #     - k-scan-network

volumes:
  k-scan-data:
    driver: local
  # redis-data:
  #   driver: local
  # postgres-data:
  #   driver: local

networks:
  k-scan-network:
    driver: bridge 